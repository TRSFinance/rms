<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 	http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	 

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="WEB-INF/config/dbConfig/rmsDB.xml" />
	</bean>
	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>WEB-INF/config/dbConfig/hibernateCommon.xml</value>
				<value>WEB-INF/config/dbConfig/rmsDB.xml</value>
			</list>
		</property>
	</bean>

 <bean id="dataSourceManager" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${hibernate.connection.manager.url}" />
		<property name="username" value="${hibernate.connection.username}" />
		<property name="password" value="${hibernate.connection.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="${trsdbcp.min}" />
		<property name="maxActive" value="${trsdbcp.max}" />
		<property name="maxWait" value="60000" /> <!-- 获取连接等待超时的时间 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" /> <!-- 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" /> <!-- 一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="validationQuery" value="${trsdbcp.testSQL}" />
		<property name="testWhileIdle" value="false" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<!-- PSCache开关，以及每个连接上PSCache的大小；如果用Oracle，则打开开关；mysql可以配置为false。分库分表较多的数据库，建议配置为false -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	
		<property name="filters" value="mergeStat" /> <!-- 监控统计拦截的filters -->
	</bean>
	
	
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
         <property name="mappingResources">
            <list>
              <!-- 测试 -->
            <value>com/trs/rms/test/bean/RmsTest.hbm.xml</value>
             <!-- 企业名单 -->
             <value>com/trs/rms/company/bean/RmsCompanyInfo.hbm.xml</value>
             <value>com/trs/rms/company/bean/RmsCompanyTrigger.hbm.xml</value>
             <value>com/trs/rms/company/bean/RmsCorporateUser.hbm.xml</value>
            
              <!-- 用户权限 -->
             <value>com/trs/rms/usermgr/bean/RmsGroup.hbm.xml</value>
             <value>com/trs/rms/usermgr/bean/RmsGroupUser.hbm.xml</value>
             <value>com/trs/rms/usermgr/bean/RmsRole.hbm.xml</value>
             <value>com/trs/rms/usermgr/bean/RmsRolePerm.hbm.xml</value>
             <value>com/trs/rms/usermgr/bean/RmsUser.hbm.xml</value>
             <value>com/trs/rms/usermgr/bean/RmsUserLog.hbm.xml</value>
             <value>com/trs/rms/usermgr/bean/RmsUserRole.hbm.xml</value>
                  
            </list>
         </property>

		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="dataSource" ref="dataSourceManager" />
	</bean>
	  <!--  定义事务管理  --> 
	    <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	    <property name="sessionFactory">
	    	<ref local="sessionFactory"/>
	    </property>
	    </bean>
   	 <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->  
   	 <bean id="publicDao" class="com.trs.rms.base.page.BasicDaoImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
   <bean id="pwdEncoder" class="com.trs.rms.base.security.encoder.Md5PwdEncoder" />
   <!-- google 验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">250</prop>
						<prop key="kaptcha.textproducer.font.size">90</prop>
						<prop key="kaptcha.image.height">90</prop>
						<prop key="kaptcha.session.key">SPRING_MVC_KAPTCHA</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
    <tx:annotation-driven transaction-manager="hibernateTransactionManager"  /> 
   	 <!-- 扫描基本DAO层 -->  
    <context:component-scan base-package="com.trs.rms.base.dao">
	</context:component-scan>
	  
	<import resource="../service/testService.xml"/>
	<import resource="../shiro/spring-shiro.xml"/>
</beans>